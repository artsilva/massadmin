/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.massmanager.swing.view;

import com.massmanager.swing.model.Conexion;
import com.massmanager.swing.model.QuerysAnuales;
import java.awt.Toolkit;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import com.massmanager.swing.model.PropiedadesColumnas;

/**
 *
 * @author Artsk
 */
public class MenuMassAnual extends javax.swing.JInternalFrame {

    JTable grid;
    ResultSet rs;

    /**
     * Creates new form MenuMassAnual
     */
    public MenuMassAnual() {
        initComponents();

        grdAnual.setAutoResizeMode(grdAnual.AUTO_RESIZE_OFF);
        grdAnual.doLayout();

        //Configuracion grupoPrimario RadioButton
        grupoPrimero.add(rdArea);
        grupoPrimero.add(rdExtremidad);
        grupoPrimero.add(rdSector);
        grupoPrimero.add(rdTipo);
        
        //Setear Constructor con datos por defecto en la Grilla
        DefaultTableModel dfm = new DefaultTableModel();
        grid = this.grdAnual;
        grid.setModel(dfm);

        dfm.setColumnIdentifiers(new Object[]{"ID", "Nombre", "Apellido", "Rut", "Sector", "Area", "Jefe Area", "Fecha", "Lugar Incidente",
            "Detalles", "Lesion", "Incidente", "Extremidad", "Paramedico", "Tratamiento", "Comentario"});

        QuerysAnuales query = new QuerysAnuales();
        rs = query.ExtraerAtencionesAnual();
        try {
            while (rs.next()) {
                dfm.addRow(new Object[]{rs.getInt("id_atencion"), rs.getString("nombre"), rs.getString("apellido"), rs.getInt("rut"), rs.getString("sector"),
                    rs.getString("area"), rs.getString("jefe_area"), rs.getDate("fecha"), rs.getString("lugarincidente"), rs.getString("detalles"),
                    rs.getString("lesion"), rs.getString("incidente"), rs.getString("extremidad"), rs.getString("paramedico"), rs.getString("tratamiento"), rs.getString("comentario")});
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        //Setea el ancho de las columnas con valores del Metodo de la Clase AnchoColumnas
        PropiedadesColumnas columna = new PropiedadesColumnas();
        columna.setAnchoColumnasAnual(grdAnual);
        columna.setPropiedadesCabeceras(grdAnual);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    //Metodo local para mostrar mensajes
    private void showMessage(String msg) {
        Toolkit.getDefaultToolkit().beep();
        JOptionPane.showMessageDialog(null, msg);
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoPrimero = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        rdTipo = new javax.swing.JRadioButton();
        rdArea = new javax.swing.JRadioButton();
        rdSector = new javax.swing.JRadioButton();
        rdExtremidad = new javax.swing.JRadioButton();
        panelGrillasAnuales = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        grdAnual = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        panelTipo = new javax.swing.JPanel();
        boxOpcion = new javax.swing.JComboBox();
        btnFiltrar = new javax.swing.JButton();
        btnExportar = new javax.swing.JButton();
        boxAno = new javax.swing.JComboBox();

        setTitle("Reportes Anuales");
        setPreferredSize(new java.awt.Dimension(1180, 662));

        jPanel1.setPreferredSize(new java.awt.Dimension(1180, 662));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filtrar por", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP), "Filtro Primario"));
        jPanel3.setPreferredSize(new java.awt.Dimension(340, 129));

        rdTipo.setText("Tipo");
        rdTipo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rdTipo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdTipoMouseClicked(evt);
            }
        });
        rdTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdTipoActionPerformed(evt);
            }
        });

        rdArea.setText("Area");
        rdArea.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rdArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdAreaMouseClicked(evt);
            }
        });
        rdArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdAreaActionPerformed(evt);
            }
        });

        rdSector.setText("Sector");
        rdSector.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rdSector.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdSectorMouseClicked(evt);
            }
        });

        rdExtremidad.setText("Extremidad Afectada");
        rdExtremidad.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rdExtremidad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdExtremidadMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdTipo)
                    .addComponent(rdSector)
                    .addComponent(rdExtremidad)
                    .addComponent(rdArea))
                .addGap(0, 177, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addComponent(rdTipo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdArea)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdSector)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdExtremidad))
        );

        panelGrillasAnuales.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "Atenciones Anuales", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP)));
        panelGrillasAnuales.setPreferredSize(new java.awt.Dimension(494, 475));

        grdAnual.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grdAnual.setRowSelectionAllowed(false);
        grdAnual.setSelectionForeground(new java.awt.Color(93, 130, 189));
        jScrollPane1.setViewportView(grdAnual);
        if (grdAnual.getColumnModel().getColumnCount() > 0) {
            grdAnual.getColumnModel().getColumn(0).setResizable(false);
            grdAnual.getColumnModel().getColumn(0).setPreferredWidth(500);
            grdAnual.getColumnModel().getColumn(1).setResizable(false);
            grdAnual.getColumnModel().getColumn(2).setResizable(false);
            grdAnual.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout panelGrillasAnualesLayout = new javax.swing.GroupLayout(panelGrillasAnuales);
        panelGrillasAnuales.setLayout(panelGrillasAnualesLayout);
        panelGrillasAnualesLayout.setHorizontalGroup(
            panelGrillasAnualesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGrillasAnualesLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        panelGrillasAnualesLayout.setVerticalGroup(
            panelGrillasAnualesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGrillasAnualesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/massmanager/swing/view/lirquen-logo-top.png"))); // NOI18N

        panelTipo.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filtro Secundario", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP)));
        panelTipo.setPreferredSize(new java.awt.Dimension(340, 129));

        boxOpcion.setEditable(true);
        boxOpcion.setForeground(new java.awt.Color(255, 255, 255));
        boxOpcion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        btnFiltrar.setText("Filtrar");
        btnFiltrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarActionPerformed(evt);
            }
        });

        btnExportar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/massmanager/swing/view/excel-icon.png"))); // NOI18N
        btnExportar.setText("Exportar");
        btnExportar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });

        boxAno.setEditable(true);
        boxAno.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout panelTipoLayout = new javax.swing.GroupLayout(panelTipo);
        panelTipo.setLayout(panelTipoLayout);
        panelTipoLayout.setHorizontalGroup(
            panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTipoLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(boxOpcion, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boxAno, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnExportar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnFiltrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        panelTipoLayout.setVerticalGroup(
            panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTipoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boxOpcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExportar)
                    .addComponent(boxAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 163, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82))
                    .addComponent(panelGrillasAnuales, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1144, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelGrillasAnuales, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1154, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rdAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdAreaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdAreaActionPerformed

    private void btnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarActionPerformed
        // TODO add your handling code here:
        //Setea variables de la Query con el contenido del ComboBox
        String anio = (String) this.boxAno.getSelectedItem();
        String extremidad = (String) this.boxOpcion.getSelectedItem();
        String incidente = (String) this.boxOpcion.getSelectedItem();
        String area = (String) this.boxOpcion.getSelectedItem();
        String sector = (String) this.boxOpcion.getSelectedItem();
        
        QuerysAnuales query = new QuerysAnuales();
        grdAnual.setModel(new DefaultTableModel());
        DefaultTableModel dfm = new DefaultTableModel();
        PropiedadesColumnas ancho = new PropiedadesColumnas();     
        int cont = 1;
        
        //Borra el contenido de la tabla antes de cargar datos
        if (rdExtremidad.isSelected()) {           
            String where = "extremidad"; 
            ResultSet rsExtr = query.ExtraerAtencionAnualVariable(extremidad, anio, where);
            this.grdAnual.setModel(dfm);
            dfm.setColumnIdentifiers(new Object[]{"ID", "Nombre", "Apellido", "Rut", "Sector", "Area", "Jefe Area", "Fecha", "Lugar Incidente", "Detalles", "Lesion", "Incidente", "Extremidad", "Paramedico", "Tratamiento", "Comentario"});
            try {
                while (rsExtr.next()) {
                    dfm.addRow(new Object[]{cont++, rsExtr.getString("nombre"), rsExtr.getString("apellido"), rsExtr.getInt("rut"), rsExtr.getString("sector"), rsExtr.getString("area"), rsExtr.getString("jefe_area"), rsExtr.getDate("fecha"), rsExtr.getString("lugarincidente"), rsExtr.getString("detalles"), rsExtr.getString("lesion"), rsExtr.getString("incidente"), rsExtr.getString("extremidad"), rsExtr.getString("paramedico"), rsExtr.getString("tratamiento"), rsExtr.getString("comentario")});
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            ancho.setAnchoColumnasAnual(grdAnual);
        }
        else if (rdTipo.isSelected()) {
            String where = "incidente";
            ResultSet rsExtr = query.ExtraerAtencionAnualVariable(incidente, anio, where);
            this.grdAnual.setModel(dfm);
            dfm.setColumnIdentifiers(new Object[]{"ID", "Nombre", "Apellido", "Rut", "Sector", "Area", "Jefe Area", "Fecha", "Lugar Incidente", "Detalles", "Lesion", "Incidente", "Extremidad", "Paramedico", "Tratamiento", "Comentario"});
            try {
                while (rsExtr.next()) {
                    dfm.addRow(new Object[]{cont++, rsExtr.getString("nombre"), rsExtr.getString("apellido"), rsExtr.getInt("rut"), rsExtr.getString("sector"), rsExtr.getString("area"), rsExtr.getString("jefe_area"), rsExtr.getDate("fecha"), rsExtr.getString("lugarincidente"), rsExtr.getString("detalles"), rsExtr.getString("lesion"), rsExtr.getString("incidente"), rsExtr.getString("extremidad"), rsExtr.getString("paramedico"), rsExtr.getString("tratamiento"), rsExtr.getString("comentario")});
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            ancho.setAnchoColumnasAnual(grdAnual);
        }
        else if (rdArea.isSelected()) {
            String where = "area";
            ResultSet rsExtr = query.ExtraerAtencionAnualVariable(area, anio, where);
            this.grdAnual.setModel(dfm);
            dfm.setColumnIdentifiers(new Object[]{"ID", "Nombre", "Apellido", "Rut", "Sector", "Area", "Jefe Area", "Fecha", "Lugar Incidente", "Detalles", "Lesion", "Incidente", "Extremidad", "Paramedico", "Tratamiento", "Comentario"});
            try {
                while (rsExtr.next()) {
                    dfm.addRow(new Object[]{cont++, rsExtr.getString("nombre"), rsExtr.getString("apellido"), rsExtr.getInt("rut"), rsExtr.getString("sector"), rsExtr.getString("area"), rsExtr.getString("jefe_area"), rsExtr.getDate("fecha"), rsExtr.getString("lugarincidente"), rsExtr.getString("detalles"), rsExtr.getString("lesion"), rsExtr.getString("incidente"), rsExtr.getString("extremidad"), rsExtr.getString("paramedico"), rsExtr.getString("tratamiento"), rsExtr.getString("comentario")});
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            ancho.setAnchoColumnasAnual(grdAnual);
        }
        else if (rdSector.isSelected()) {
            String where = "sector";
            ResultSet rsExtr = query.ExtraerAtencionAnualVariable(sector, anio, where);
            this.grdAnual.setModel(dfm);
            dfm.setColumnIdentifiers(new Object[]{"ID", "Nombre", "Apellido", "Rut", "Sector", "Area", "Jefe Area", "Fecha", "Lugar Incidente", "Detalles", "Lesion", "Incidente", "Extremidad", "Paramedico", "Tratamiento", "Comentario"});
            try {
                while (rsExtr.next()) {
                    dfm.addRow(new Object[]{cont++, rsExtr.getString("nombre"), rsExtr.getString("apellido"), rsExtr.getInt("rut"), rsExtr.getString("sector"), rsExtr.getString("area"), rsExtr.getString("jefe_area"), rsExtr.getDate("fecha"), rsExtr.getString("lugarincidente"), rsExtr.getString("detalles"), rsExtr.getString("lesion"), rsExtr.getString("incidente"), rsExtr.getString("extremidad"), rsExtr.getString("paramedico"), rsExtr.getString("tratamiento"), rsExtr.getString("comentario")});
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            ancho.setAnchoColumnasAnual(grdAnual);
        }
        else {
            this.grdAnual.setModel(dfm);
            dfm.setColumnIdentifiers(new Object[]{"ID", "Nombre", "Apellido", "Rut", "Sector", "Area", "Jefe Area", "Fecha", "Lugar Incidente", "Detalles", "Lesion", "Incidente", "Extremidad", "Paramedico", "Tratamiento", "Comentario"});
            showMessage("Debe seleccionar algun filtro para poder mostrar reportes especificos");
        }
    }//GEN-LAST:event_btnFiltrarActionPerformed

    private void rdTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdTipoActionPerformed

    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExportarActionPerformed

    private void rdTipoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdTipoMouseClicked
        // TODO add your handling code here:
        this.boxOpcion.removeAllItems();
        this.boxAno.removeAllItems();
        String opcion = (String) this.boxOpcion.getSelectedItem();
        String anio = (String) this.boxAno.getSelectedItem();
        
        QuerysAnuales query = new QuerysAnuales();
        Conexion cn = new Conexion();
        ResultSet rs;
        ResultSet rs2;
        rs = cn.ExtraerIncidente();
        rs2 = query.countAtencionAnualVariable(opcion, anio, opcion.toLowerCase());
        try {
            while (rs.next()) {
                this.boxOpcion.addItem(rs2.getInt("count") + " - " + rs.getString("tipo"));
            }
        } catch (Exception e) {
        }
        //Setea el Mes en el COmboBox de AÑO cuando se selecciona un radioButton
        ResultSet rs3;
        rs3 = cn.ExtraerAno();
        try {
            while (rs3.next()) {
                this.boxAno.addItem(rs3.getString("ano"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_rdTipoMouseClicked

    private void rdAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdAreaMouseClicked
        // TODO add your handling code here:
        this.boxOpcion.removeAllItems();
        this.boxAno.removeAllItems();
        Conexion cn = new Conexion();
        ResultSet rs3;
        rs3 = cn.ExtraerArea();
        try {
            while (rs3.next()) {
                this.boxOpcion.addItem(rs3.getString("nombre_area"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        //Setea el Mes en el COmboBox de MES cuando se selecciona un radioButton
        ResultSet rs6;
        rs6 = cn.ExtraerAno();
        try {
            while (rs6.next()) {
                this.boxAno.addItem(rs6.getString("ano"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_rdAreaMouseClicked

    private void rdSectorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdSectorMouseClicked
        // TODO add your handling code here:
        this.boxOpcion.removeAllItems();
        this.boxAno.removeAllItems();
        Conexion cn = new Conexion();
        ResultSet rs4;
        rs4 = cn.ExtraerSector();
        try {
            while (rs4.next()) {
                this.boxOpcion.addItem(rs4.getString("nombre_sector"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        //Setea el Mes en el COmboBox de MES cuando se selecciona un radioButton
        ResultSet rs6;
        rs6 = cn.ExtraerAno();
        try {
            while (rs6.next()) {
                this.boxAno.addItem(rs6.getString("ano"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_rdSectorMouseClicked

    private void rdExtremidadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdExtremidadMouseClicked
        // TODO add your handling code here:
        this.boxOpcion.removeAllItems();
        this.boxAno.removeAllItems();
        Conexion cn = new Conexion();
        ResultSet rs5;
        rs5 = cn.ExtraerExtremidad();
        try {
            while (rs5.next()) {
                this.boxOpcion.addItem(rs5.getString("nombre"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        //Setea el Mes en el COmboBox de MES cuando se selecciona un radioButton
        ResultSet rs6;
        rs6 = cn.ExtraerAno();
        try {
            while (rs6.next()) {
                this.boxAno.addItem(rs6.getString("ano"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_rdExtremidadMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox boxAno;
    private javax.swing.JComboBox boxOpcion;
    private javax.swing.JButton btnExportar;
    private javax.swing.JButton btnFiltrar;
    private javax.swing.JTable grdAnual;
    private javax.swing.ButtonGroup grupoPrimero;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelGrillasAnuales;
    private javax.swing.JPanel panelTipo;
    private javax.swing.JRadioButton rdArea;
    private javax.swing.JRadioButton rdExtremidad;
    private javax.swing.JRadioButton rdSector;
    private javax.swing.JRadioButton rdTipo;
    // End of variables declaration//GEN-END:variables

}
